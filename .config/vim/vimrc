function! SourceIfExists(file)
  if filereadable(expand(a:file))
    exe 'source' a:file
  endif
endfunction

unlet! skip_defaults_vim
source $VIMRUNTIME/defaults.vim  " Will error and proceed if fails

set expandtab
set shiftwidth=0
set tabstop=4

set wildmenu
"set wildmode=list:longest   " make cmdline tab completion similar to bash
set wildmode=list:longest,full " better

set pastetoggle=<F2>
" Another suggestion is :r! cat

" ==== My own little Spacemacs ====
" Perhaps change `set timeout`?
noremap <Space>wd <C-W>c
noremap <Space>wm <C-W>o
" noremap <Space>fed :edit ~/.vimrc<CR>

noremap <Space>ws <C-W>s
noremap <Space>wv <C-W>v
noremap <Space>wh <C-W>h
noremap <Space>wj <C-W>j
noremap <Space>wk <C-W>k
noremap <Space>wl <C-W>l

noremap <Space>k :!kak %<CR>
" That was too simple :)
noremap <Space>k :execute printf(":set autoread \| !kak %s +%s:%s", expand('%'),line('.'), col('.'))<CR><CR>
nmap <Space>K <Space>k:q<CR>

" https://stackoverflow.com/questions/2600783/how-does-the-vim-write-with-sudo-trick-work
" cmap introduces a weird lag
" https://stackoverflow.com/questions/21659637/how-to-fix-sudo-no-tty-present-and-no-askpass-program-specified-error/24107529#24107529
" might be useful for sudo errors.
ca w!! w !sudo /usr/bin/tee % > /dev/null
command! Wsudo w !sudo /usr/bin/tee % > /dev/null

" If I want to use , as mapleader
" noremap <unique> _ ,
" noremap <unique> - ;
" "https://github.com/chrisbra/vim_faq

" ==== Whitespace ===
set listchars=tab:▷\ ,eol:¬,extends:»,precedes:«  " Use `set list` to use
noremap <leader>l :set list!<CR>
" "Tabs and trailing whitespace (or just use `set list` and keep end:$ in
" "listchars?
" https://vimawesome.com/plugin/better-whitespace
" set list
" set list listchars=tab:»\ ,trail:°
" set listchars=tab:<\ >,trail:\ 
" highlight SpecialKey guibg=green ctermbg=red

" ==== This starts SpaceVim if it's installed =====

"call SourceIfExists("~/.local/app/SpaceVim/vimrc")
function! SpaceVimStart()
  source ~/.local/app/SpaceVim/vimrc
  command! Space echo "Cannot start SpaceVim twice."
endfunction
command Space call SpaceVimStart()

set wrap

set diffopt+=algorithm:patience
if &diff || get(g:, 'some_variable_indicating_about_to_diff')
  " " As an alternative, could try github, monokai themes from
  " " https://stackoverflow.com/a/53130672/563359
  " " or Vim 9's https://github.com/vim/colorschemes
  " colorscheme desert " Not very ugly
  " colorscheme pablo  " Ugly
  " colorscheme habamax " Pretty, not sure about diff.
  colorscheme murphy
  " set diffopt+=inline:word
  set diffopt+=inline:char
  " syntax off
endif

if has("gui_macvim")
    set guifont=-monospace-:h15
endif

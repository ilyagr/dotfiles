[user]
name =  "Ilya Grigoriev"
email = "ilyagr@users.noreply.github.com"

[ui]
diff-editor = "vimtabdiff.py"
merge-editor = "vimdiff"
# merge-editor = "meld"
# merge-editor = "kdiff3"
color = "always"
log-word-wrap=true
pager="sp"
default-command="log"

# cargo install --git https://github.com/arxanas/git-branchless scm-record --features scm-diff-editor
[merge-tools.scm]
program="scm-diff-editor"
edit-args = ["--dir-diff", "$left", "$right"]

[merge-tools.vscode]
program = "code"
merge-args = ["--new-window", "--wait", "--merge", "$left", "$right", "$base", "$output"]
use-tmp-dir-under-workspace=true

[merge-tools.idea]
program = "idea"
diff-args = ["diff",  "$left", "$right"]
edit-args = ["diff",  "$left", "$right"]
merge-args = ["merge" , "$left", "$right", "$base", "$output"]

[merge-tools.code-xargs]
program = "sh"
diff-invocation-style = "repeat-file-pairs"
edit-args = ["-c",
    '''printf "%s\0" "$@" | xargs -0 -n2 -P0 -t -- code-wayland --wait --diff''',
    "unused_name", "$repeat", "$left", "$right"
    ]
use-tmp-dir-under-workspace=true

[merge-tools.vimtabdiff]
# Replaces my old vimtabdiff script
# Alternatively this can be [merge-tools.'vimtabdiff.py']
program = "vimtabdiff.py"
edit-args = ["--vim", '''vim -c "colorscheme murphy"''', "$left", "$right"]

[merge-tools.vimtabdiff-nvim]
program = "vimtabdiff.py"
edit-args = ["--vim", '''nvim -c "colorscheme murphy"''', "$left", "$right"]

[merge-tools.vimtabdiff-gvim]
program = "vimtabdiff"
edit-args = ["--vim", '''gvim --nofork -c "colorscheme murphy"''', "$left", "$right"]

[merge-tools.diff]
edit-args = ["-r", "--brief", "--new-file", "-s", "$left", "$right"]
[merge-tools.diff3]
program="sh"
merge-args = [ "-c", "git merge-file --zdiff3 --stdout \"$left\" \"$base\" \"$right\" | diff -u \"$left\" -"]

[merge-tools.git]
edit-args = ["diff", "--no-index", "--name-only", "$left", "$right"]

[merge-tools.kdiff3]
edit-args = ["--merge", "--cs", "CreateBakFiles=0", "--cs", "SkipDirStatus=1", "$left", "$right", "$output"]
# Notes on interesting kdiff3 ptions
# SkipDirStatus=1
# CreateBakFiles=0
# ShowInfoDialogs=0
# AutoCopySelection (??)
# SyncMode (??)

[merge-tools.kdiff3f] # Flipped
merge-args = [ "$base",  "$right","$left", "-o", "$output", "--auto",]
program="kdiff3"

[merge-tools.p4merge]
merge-args = [ "$base",  "$left", "$right", "$output"]
[merge-tools.p4mergef]
merge-args = [ "$base",  "$right", "$left", "$output"]
program="p4merge"
env = {QT_QPA_PLATFORM="xcb"}  # Doesn't seem to work?

[merge-tools.bcompare]
# edit-args = ["$left", "$right", "-favorright", "-edit", "-mergeoutput=$output",]
merge-args = ["$left", "$right", "$base", "$output", "-automerge", "-reviewconflicts"] #"-solo"?

[merge-tools.meld]
edit-args = ["$left", "$right", "-a",] #  "-o", "/tmp/output"]
# vimdiff.merge-args = ["-f", "-d", "$output", "-M",
#                       "$left", "$base", "$right",
#                       "-c", "wincmd J", "-c", "set modifiable",
#                       "-c", "set write"]
#
[merge-tools.difft]
diff-args = [ "--color=always", "$left", "$right"]
[merge-tools.diffti]
program="difft"
diff-args = [ "--color=always", "--display=inline", "$left", "$right"]

[aliases]
n = ["new"]
d = ["diff", "-s"]
de = ["diffedit"]
di = ["describe"]
next = ["co", "@-+ ~ @"]
prev = ["co", "@--"]
delta = ["diff", "--git", "--config-toml=ui.pager='delta'"]
deltas = ["diff", "--git", "--config-toml=ui.pager='delta -s'"]
deltan = ["diff", "--git", "--config-toml=ui.pager='delta -n'"]


[revset-aliases]
next = "@-+ ~ @"  # After `jj up abc`, `jj up next` is equivalent to `jj up abc+`
M = "present(main) | present(master)"  # Main branch
# R: "relevant commits" from jj.logstatus. Better name?
R ="M..@|(M..@)-|@..M|@|M..branches()|(M..branches())-|M|remote_branches().. | (remote_branches()..)-"
# 'iddot(from, to)'= '(from..to)|((::from & ::to)~((::from & ::to)-))'

#  jj log -r 'siddot(main,mdbook::|mkdocs::)'
'siddot(from, to)'= '(from..to)|(from..to)-'
'iddot(from, to)'= 'siddot(from,to)|from'
stack = "(trunk()..@)::"
open = "immutable-heads.."
stacklog = "ancestors(stack, 2)|trunk()"
openlog = "ancestors(open, 2)|immutable-heads|@"
stackl="stacklog"
openl="openlog"
immutable-heads="trunk()"

[revsets]
short-prefixes="ancestors((remote_branches(main)|remote_branches(master)|remote_branches(develop)|tags())..,2)"
immutable-heads="immutable-heads"
# log="openl"
log="openlog"

[template-aliases]
"format_short_id(id)" = "id.shortest(6)"
'format_short_change_id(id)' = 'format_short_id(id).upper()'
"format_timestamp(timestamp)" = "timestamp.ago()"
"format_short_signature(signature)" = 'label("email", signature.username() ++ "@")'
commit_summary_separator = 'label("separator", "| ")'
description_placeholder = 'label(separate(" ", if(empty, "empty"), "description placeholder"), "(no description set)")'

# [colors]
# "description placeholder" =  "yellow" # "blue"
# "empty description placeholder" = "green"
# 

{
  "window.titleBarStyle": "custom",
  "window.commandCenter": true,
  "workbench.colorTheme": "Default Dark+ Experimental",
  "workbench.startupEditor": "none",
  "window.menuBarVisibility": "classic",
  "editor.renderControlCharacters": true,
  "dance.modes": {
    "normal": {
      "cursorStyle": "block",
      "selectionBehavior": "character",
      "lineNumbers": "on"
    }
  },
  "editor.fontFamily": "Noto Sans Mono, Consolas, 'Courier New', monospace",
  "workbench.sideBar.location": "right",
  "autoHide.autoHidePanel": false,
  "editor.minimap.showSlider": "always",
  "editor.minimap.size": "fit",
  "editor.renderWhitespace": "trailing",
  "editor.inlayHints.enabled": "offUnlessPressed",
  "markdownFormatter.formatOpt": {
    "wrap_line_length": 78
  },
  "[rust]": {
    "editor.formatOnSave": true
  },
  "update.mode": "none",
  "editor.minimap.autohide": true,
  "launch": {
    "configurations": [],
    "compounds": []
  },
  "rust-analyzer.check.command": "clippy",
  "rust-analyzer.cargo.noDefaultFeatures": true,
  "rust-analyzer.check.targets": ["x86_64-unknown-linux-gnu"],
    "editor.wrappingIndent": "indent",
    "editor.fontFamily": "'Fira Code',  'Droid Sans Mono', 'monospace', monospace",
    "editor.fontSize": 13.5,
    "editor.renderControlCharacters": true,
    "git.confirmSync": false,
    "git.enableSmartCommit": true,
    "alt-editor.name": "emacs",
    "alt-editor.binary": "emacsclient",
    "alt-editor.args": "-c -a emacs --no-wait +{line}:{column} {filename}",
    // -e '(select-frame-set-input-focus (selected-frame))'",
    "alt-editor.terminal": false,
    // Error: Command failed: gnome-terminal -x sh -c  \
    // 'emacs --no-splash +7:1 /home/ilyagr/dev/ripgrep/NOTES_ILYA.org'
    "dance.modes": {
        "input": { // Probably doesn't do anything.
            "cursorStyle": "underline-thin"
        },
        "normal": {
            "cursorStyle": "block",
            "lineNumbers": "relative",
            "selectionBehavior": "character", // Seems necesary with block cursor.
        },
        // ======= For playing with my extension =======
        "pending": {
            // "cursorStyle": "underline-thin"
        },
        "multivim": {
            "cursorStyle": "block",
            "lineNumbers": "relative",
            "selectionBehavior": "character",
        },
        "visual": {
            "cursorStyle": "block",
            "lineNumbers": "relative",
            "selectionBehavior": "character",
        }
    },
    "rust-client.engine": "rust-analyzer",
    "julia.enableTelemetry": true,
    "julia.symbolCacheDownload": true,
    "julia.executablePath": "~/.local/bin/julia",
    "terminal.integrated.commandsToSkipShell": [
        "language-julia.interrupt"
    ],
    // BEGIN Vim & VSpaceCode
    "vspacecode.bindingOverrides": [
        {
            "keys": [
                "j",
                "["
            ], // "j.[" should also work.
            "name": "Go back",
            "type": "command",
            "command": "workbench.action.navigateBack",
        },
        {
            "keys": [
                "j",
                "]"
            ],
            "name": "Go forward",
            "type": "command",
            "command": "workbench.action.navigateForward",
        },
    ],
    "vim.easymotion": true,
    "vim.useSystemClipboard": true,
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<space>"
            ],
            "commands": [
                "vspacecode.space"
            ]
        },
        {
            "before": [
                ","
            ],
            "commands": [
                "vspacecode.space",
                {
                    "command": "whichkey.triggerKey",
                    "args": "m"
                }
            ]
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<space>"
            ],
            "commands": [
                "vspacecode.space"
            ]
        },
        {
            "before": [
                ","
            ],
            "commands": [
                "vspacecode.space",
                {
                    "command": "whichkey.triggerKey",
                    "args": "m"
                }
            ]
        }
    ],
    // END VSpaceCode
    "window.titleBarStyle": "custom",
    "code-eol.highlightExtraWhitespace": true,
    "code-eol.returnCharacter": "↓",
    "code-eol.newlineCharacter": "↵",
    "editor.renderWhitespace": "trailing",
    "editor.minimap.showSlider": "always",
    "gitHistory.showEditorTitleMenuBarIcons": false,
    "autoHide.autoHidePanel": false,
    "editor.minimap.size": "fit",
    "Lua.telemetry.enable": true,
    "code-eol.decorateBeforeEol": true,
    "editor.stickyScroll.enabled": true,
    "editor.inlayHints.enabled": "offUnlessPressed",
    // "rust-analyzer.cargo.buildScripts.overrideCommand": null,
    "workbench.sideBar.location": "right",
    "window.commandCenter": true,
    "[rust]": {
        "editor.formatOnSave": true,
    },
    "rust-analyzer.check.command": "clippy",
    "files.watcherExclude": {
        "**/.jj/repo/**": true,
        "target/**": true
    },
    "rust-analyzer.debug.engine": "ms-vscode.cpptools",
    "rust-analyzer.debug.engineSettings": {
        "cppdbg": {
            //"miDebuggerPath": "${env:HOME}/.cargo/bin/rust-gdb",
            "miDebuggerPath": "rust-gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": false
                }
            ],
        }
    },
    "workbench.colorTheme": "Atom One Dark",
    "diffEditor.renderSideBySide": false,
    "[markdown]": {
        "editor.defaultFormatter": "DavidAnson.vscode-markdownlint"
    },
    "accessibility.dimUnfocused.enabled": true,
    "accessibility.dimUnfocused.opacity": 0.8,
    "editor.minimap.enabled": false,
    // "remote.SSH.defaultExtensions": [
    //     "gitpod.gitpod-remote-ssh"
    // ],
}
colorscheme solarized-dark

map global user e -docstring %{Open kakrc} ': e ~/.config/kak/kakrc <ret>'
map global user c -docstring %{Copy to clipboard} \
    '<a-|> vis-clipboard --copy<ret>'

add-highlighter global/ number-lines -relative -hlcursor
# In code, word wrapping makes it confusing to decide where the
# spaces are. Ideally, `-word` would be turned on for text.
add-highlighter global/ wrap -marker >| -indent
# Would prefer to highlight trailing whitespace insteads, but
# this should substitute for now.
addhl global/ show-whitespaces -spc ' '
face global LineNumberCursor header

# , should remove selections like in helix (and future kak?)
map global normal <space> ,
map global normal , <space>
map global normal <a-,> <a-space>
map global normal x <a-x>
map global normal <a-x> <a-X>
# X and <a-X> are overridden below

# Delete these? Make these user or normal?
map global normal '/' %{/(?i)}
map global normal '<a-/>' %{<a-/>(?i)}
map global normal '?' %{?(?i)}
map global normal '<a-?>' %{<a-?>(?i)}

# https://github.com/mawww/kakoune/issues/898#issuecomment-727516233
# Save selections to the [b]ackup register.
hook -group backup-selections global NormalIdle .* %{
  set-register b %reg{z}
  execute-keys -draft '"zZ'
}
# Add a mapping to easily reach the command.  (Prefix with <esc>
# if I want to put it in `goto` rather than `user`.
map -docstring 'Restore selections from the [b]ackup register' global user z '"bz'

# From https://github.com/mawww/kakoune/wiki/Selections#how-to-make-x-select-lines-downward-and-x-select-lines-upward
# and https://github.com/mawww/kakoune/issues/1285
def -params 1 extend-line-down %{
      exec "<a-:>%arg{1}X"
}
def -params 1 extend-line-up %{
      exec "<a-:><a-;>%arg{1}K<a-;>"
        try %{
                exec -draft ';<a-K>\n<ret>'
                    exec X
        }
exec '<a-;><a-X>'
}
map global normal X     ':extend-line-down %val{count}<ret>'
map global normal <a-X> ':extend-line-up %val{count}<ret>'

# set-option global grepcmd 'rg -Hn --no-heading'
define-command -params 1 ft -docstring %{
        Shortcut for `set buffer filetype`.
    } %{
        set buffer filetype %arg{1}
    }
define-command ft-py %{ ft python }
define-command ft-md %{ ft markdown }

define-command -params ..1 sh %{
    terminal sh -c "cd $1; buf=""$2"" ${3:-$SHELL}" \
    _unused_ %sh{dirname $kak_buffile} %val{buffile} %arg[1]
}
map global user v -docstring %{Edit in Vim} \
    %{:  sh "vim %val{buffile} +%val{cursor_line}"<ret>}

# define-command -params ..1 sh  terminal sh -c "cd $1; $SHELL" _unused_ %sh{dirname $kak_buffile}
# terminal vim %val{buffile}

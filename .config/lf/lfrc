# # Possible TODOs:
# * On-cd for z
# * Set LF_CLONE on cloning, make it show a note somehow.

set mouse
set hidden

set ifs "\n"
map i $less -SC -+F -+X "$f"
cmd doc $"$lf" -doc | less -+F -+X
set shellopts "-eu"

set cursorparentfmt "\033[7;90m"
set errorfmt "\033[1;31m%s\033[0m"
# Prettier than an error
# map <c-m-1> echo '<c-m-1> does not do much'
# map <m-3> echo '<m-3> does not do much'

cmd cfg_reload source ~/.config/lf/lfrc
# Temporary
cmd jj_help :push !jj<space>help<space>

set period 3
set incsearch
set incfilter
set scrolloff 5
# <tab>, defined below, works to undo `filter` somehow.
map * filter

map v invert-below
map V invert
map ~ invert
# See what happened
map ` !true
map <c-o> !true
# Spaces in $fx OK b/c of set ifs
map <enter> push $<space>$fx<home>
# <a-enter> doesn't work, bug?
map <a-enter> push !<space>$fx<home>
# Defaults to w. May need to change to a "push"
# mapping to work on Windows.
map S $$SHELL
cmd follow_link %{{
  lf -remote "send ${id} select '$(readlink $f)'"
}}
map gL follow_link

set previewer ~/.config/lf/preview.sh
cmd _preview_sh $LESSOPEN='| ~/.config/lf/preview.sh %s' less -RC -+F -+X "$f"
map I _preview_sh

# Pager instead of open when pressing <right>
cmd open _preview_sh
# Old open behavior on x
map x &$OPENER "$f"

# Add some sanity. Suggest this for default bindings?
map  <c-c>  echo "To exit, press the 'q' key."
map  <esc>  echo "To exit, press the 'q' key."

cmd z-jump ${{
  lf -remote "send ${id} cd '$($ZLUA_SCRIPT -e $@)'"
}}
map Z push :z-jump<space>-I<space>
map zb push :z-jump<space>-b<space>
map zf push :z-jump<space>-I<space>
map zz push :z-jump<space>

cmd recol ${{
    w=$(tput cols)
    if [ $w -le 30 ]; then
        set nopreview
        lf -remote "send $id set ratios 1"
    elif [ $w -le 50 ]; then
        lf -remote "send $id set ratios 1:1"
    elif [ $w -le 65 ]; then
        lf -remote "send $id set ratios 3:4"
    elif [ $w -le 95 ]; then  # Was 160
        lf -remote "send $id set ratios 2:3:4"
        set preview
    else
        lf -remote "send $id set ratios 2:2:3:4"
        set preview
    fi
}}
map <tab> :recol; reload
recol
map zp :set preview!

# Clone lf. Need $SHELL to initialize env. vars like ZLUA_SCRIPT
map CC %{{tmux split -- "$SHELL" -c "lf $f"}}
cmd mkdir %{{
    IFS=" " # Makes "$*" concat. with ' '
    mkdir -p -- "$*" &&
    lf -remote "send $id select \"$*\""
}}
map CD push :mkdir<space>
cmd mkdir %{{
    if [ -e "$1" ]; then
        # Minor bug: we don't check $2 or the rest
	printf "'$1' exists"
        false
    else
        mkdir -p -- "$@" &&
        lf -remote "send $id select \"$1\""
    fi
}}
map CD push :mkdir<space>""<left>
map CF push %touch<space>

# From docs
cmd backup_paste %{{
    load=$(cat ~/.local/share/lf/files)
    mode=$(echo "$load" | sed -n '1p')
    list=$(echo "$load" | sed '1d')
    if [ $mode = 'copy' ]; then
        cp -R --backup=numbered $list .
    elif [ $mode = 'move' ]; then
        mv --backup=numbered $list .
        rm ~/.local/share/lf/files
        lf -remote 'send clear'
    fi
}}
map p :backup_paste
map PP :paste
cmd link %{{
    # Abbreviated from more feature-full
    # https://github.com/gokcehan/lf/wiki/Tips#create-symlinks-soft--hard
    set -- $(cat ~/.local/share/lf/files)
    # mode="$1" # Ignore the mode, don't want hard links
    # TODO: Absolute links. The arguments should be absolute
    shift
    if [ "$#" -lt 1 ]; then
        lf -remote "send $id echo no files to link"
        exit 0
    fi
    ln -sr -t . -- "$@"
    # rm ~/.local/share/lf/files
    # lf -remote "send clear"
}}
map PL :link

# Shouldn't be a % or & command as fish_clipboard_copy sometimes
# needs to output to the terminal.
cmd sel_to_fish_clipboard $fish -c 'string join " " (string escape -n (string split \n $fx)) | fish_clipboard_copy'
cmd clipboard_show !fish -c 'fish_clipboard_paste | cat'
map PC sel_to_fish_clipboard

# From https://github.com/gokcehan/lf/issues/140#issuecomment-487393320
# and https://github.com/gokcehan/lf/discussions/915#discussioncomment-3443002
# push m-
# map Q push '-q

map Q %{{
  lf -remote "send $id :cd $OLDPWD; quit"
}}
# If the above is mapped to `q`
# map Q quit

${{
 filename=~/.config/lf/lfrc-local
 if [ -f "$filename" ]; then
  lf -remote "send $id :source $filename"
 fi
}}
 
